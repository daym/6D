#!/usr/bin/5D -p OPLs/Math.5D
let Composition := requireModule "Composition" in
Composition.withInterface1 filename
let Error := requireModule "Error" in 
let (#t) := Builtins.(#t) in 
let (#f) := Builtins.(#f) in 
let (||) := Builtins.(||) in 
let (&&) := Builtins.(&&) in 
let not := Builtins.(not) in 
let implies? := (\a \b not a || b) in 
let (else) := Builtins.(else) in 
let (if) := Builtins.(if) in 
let (elif) := Builtins.(elif) in 
let otherwise := (\f f) in 
let equivalent? := (\a \b a && b || not a && not b) in 
(#exports[#t #f (||) (&&) implies? (else) (if) (elif) not otherwise equivalent?])
