#ifndef __5D_FFI
#define __5D_FFI
#include "6D/Values"

namespace FFIs {
/* conversions */
static inline Values::NodeT internNative(Values::NodeT value) {
	return value;
}
Values::NodeT internNative(bool value) G_5D_PURE;

#ifdef __SIZEOF_LONG__
#if __SIZEOF_LONG_LONG__ != __SIZEOF_LONG__
#define INTERN_NATIVE_NEED_LONG_LONG
Values::NodeT internNative(long long value);
Values::NodeT internNativeU(unsigned long long value);
typedef long int NativeInt; /* register type */
#else
typedef long long int NativeInt; /* register type */
#endif
#else
#define INTERN_NATIVE_NEED_LONG_LONG
typedef int NativeInt; /* register type */
Values::NodeT internNative(long long value);
Values::NodeT internNativeU(unsigned long long value);
#endif
#ifdef __SIZEOF_LONG__
#if __SIZEOF_LONG_LONG__ != __SIZEOF_LONG__
typedef unsigned long int NativeUInt; /* register type */
#else
typedef unsigned long long int NativeUInt; /* register type */
#endif
#else
typedef unsigned int NativeUInt; /* register type */
#endif

#if defined(__VFP_FP__) || defined(__ARM_EABI__)
/* ARM doesn't have extended-precision floating point */
typedef double NativeFloat;
//#define NATIVEFLOAT_PRECISION 15
#else
typedef long double NativeFloat;
//#define NATIVEFLOAT_PRECISION 19
#endif
#ifdef WIN32
typedef unsigned int uint32_t; /* why me... */
#endif

Values::NodeT internNative(NativeInt value);
Values::NodeT internNativeU(NativeUInt value);
Values::NodeT internNative(NativeFloat value);

};
#endif
