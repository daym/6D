#ifndef __VALUES_SYMBOL_H
#define __VALUES_SYMBOL_H
#include <string>
#include "6D/Values"
#include "Values/Values"

BEGIN_NAMESPACE_6D(Values)

struct Symbol : Node {
private:
	const char* text;
	friend const char* getSymbol1Name(NodeT node);
public:
	Symbol(const char* text) {
		this->text = text;
	}
	virtual void str(FILE* destination) const;
};

struct Symbolreference : Node { /* for (substitution) speed reasons, a Symbolreference is NOT a Symbol */
	const int index;
	Symbolreference(int aIndex) :
		index(aIndex)
	{
	}
};

END_NAMESPACE_6D(Values)
#endif /* ndef __VALUES_SYMBOL_H */
