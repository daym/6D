#ifndef __6D_EVALUATORS_H
#define __6D_EVALUATORS_H
/*
6D programming language
Copyright (C) 2011  Danny Milosavljevic
This program is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
#include "6D/Values"

BEGIN_NAMESPACE_6D(Evaluators)
NodeT initEvaluators(void);
NODET annotate(NODET environment, NODET node);
NODET eval(NODET node);
NODET execute(NODET term);
void increaseGeneration(void);
END_NAMESPACE_6D(Evaluators)
/* this is used if we want to eval something simple from the C++ side (usually FN dispatch & sym), so be sure not to do complicated things in argument */
static INLINE NodeT dcall(NodeT fn, NodeT argument) {
	return eval(call(fn, argument));
}

#endif /* ndef __6D_EVALUATORS_H */
