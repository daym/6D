#ifndef __5D_FFI
#define __5D_FFI
#include "6D/Values"

BEGIN_NAMESPACE_6D(FFIs)
/* conversions */
static inline NODET internNative(NODET value) {
	return value;
}
NODET internNative(bool value) G_5D_PURE;

#ifdef __SIZEOF_LONG__
#if __SIZEOF_LONG_LONG__ != __SIZEOF_LONG__
#define INTERN_NATIVE_NEED_LONG_LONG
NODET internNative(long long value);
NODET internNativeU(unsigned long long value);
typedef long int NativeInt; /* register type */
#else
typedef long long int NativeInt; /* register type */
#endif
#else
#define INTERN_NATIVE_NEED_LONG_LONG
typedef int NativeInt; /* register type */
NODET internNative(long long value);
NODET internNativeU(unsigned long long value);
#endif
#ifdef __SIZEOF_LONG__
#if __SIZEOF_LONG_LONG__ != __SIZEOF_LONG__
typedef unsigned long int NativeUInt; /* register type */
#else
typedef unsigned long long int NativeUInt; /* register type */
#endif
#else
typedef unsigned int NativeUInt; /* register type */
#endif

#if defined(__VFP_FP__) || defined(__ARM_EABI__)
/* ARM doesn't have extended-precision floating point */
typedef double NativeFloat;
//#define NATIVEFLOAT_PRECISION 15
#else
typedef long double NativeFloat;
//#define NATIVEFLOAT_PRECISION 19
#endif
#ifdef WIN32
typedef unsigned int uint32_t; /* why me... */
#endif

NODET internNative(NativeInt value);
NODET internNativeU(NativeUInt value);
NODET internNative(NativeFloat value);

int intFromNode(NODET root);
int nearestIntFromNode(NODET root);
long longFromNode(NODET root);
long long longLongFromNode(NODET root);
short shortFromNode(NODET root);
void* pointerFromNode(NODET root);
bool booleanFromNode(NODET root); /* evaluates! */
char* stringFromNode(NODET root);
char* stringOrNilFromNode(NODET root);
size_t stringSizeFromNode(NODET root);
float floatFromNode(NODET root);
long double longDoubleFromNode(NODET root);
double doubleFromNode(NODET root);
long long sizedIntFromNode(int bitCount, NODET root);
/* this will eventually be used to force the entire lazy cons (one level) to be evaluated. Use with care (infinite lists aren't gonna like that). */
static inline NODET consFromNode(NODET root) {
	return(root);
}
static inline NODET pairFromNode(NODET root) {
	return(root);
}
static inline NODET nodeFromNode(NODET root) {
	return root;
}

END_NAMESPACE_6D(FFIs)
#endif
